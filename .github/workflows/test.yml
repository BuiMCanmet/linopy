name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ '*' ]
  schedule:
  - cron: "0 5 * * TUE"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Build the Python SDist and wheel, performs metadata and readme linting
  build:
    name: Build and verify package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: hynek/build-and-inspect-python-package@v2
        id: baipp

    outputs:
      python-versions: ${{ steps.baipp.outputs.supported_python_classifiers_json_array }}

  test:
    name: Test package
    needs: [build]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ fromJSON(needs.build.outputs.python-versions) }}
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Needed for setuptools_scm

    - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install ubuntu dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install glpk-utils
        sudo apt-get install coinor-cbc

    - name: Install macos dependencies
      if: matrix.os == 'macos-latest'
      run: |
        brew install glpk hdf5

    - name: Set up windows package manager
      if: matrix.os == 'windows-latest'
      uses: crazy-max/ghaction-chocolatey@v3
      with:
          args: -h

    - name: Install windows dependencies
      if: matrix.os == 'windows-latest'
      run: |
        choco install glpk

    - name: Download package
      uses: actions/download-artifact@v4
      with:
        name: Packages
        path: dist

    - name: Install package and dependencies
      run: |
        ls -R
        ls dist
        python -m pip install dist/*.whl[dev,solvers]

    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=benchmark/scripts,.git/
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      env:
        MOSEKLM_LICENSE_FILE: ${{ secrets.MSK_LICENSE }}
      run: |
        pytest --cov=./ --cov-report=xml linopy --doctest-modules test

    - name: Upload code coverage report
      if: matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v4
